{"ast":null,"code":"var _jsxFileName = \"/Users/iara/Projects/JavascriptFrontEnds-Trio/src/react/src/components/AddOrderForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { api } from '../utils/api';\n\n// Reference Data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CUSTOMERS = {\n  1: 'Alice Johnson',\n  2: 'Bob Smith',\n  3: 'Carol Davis'\n};\nconst PRODUCTS = {\n  1: {\n    name: 'Laptop Computer',\n    price: 899.99\n  },\n  2: {\n    name: 'Wireless Mouse',\n    price: 29.99\n  },\n  3: {\n    name: 'USB Keyboard',\n    price: 49.99\n  }\n};\nconst getTodayDate = () => {\n  return new Date().toISOString().split('T')[0];\n};\nconst AddOrderForm = ({\n  show,\n  editingOrder,\n  onClose,\n  onSave,\n  showToast,\n  formatCurrency\n}) => {\n  _s();\n  const [orderForm, setOrderForm] = useState({\n    customer_id: '',\n    order_date: getTodayDate(),\n    items: [{\n      product_id: '',\n      quantity: 1,\n      unit_price: 0\n    }]\n  });\n  useEffect(() => {\n    if (show && !editingOrder) {\n      // Reset form for new order\n      setOrderForm({\n        customer_id: '',\n        order_date: getTodayDate(),\n        items: [{\n          product_id: '',\n          quantity: 1,\n          unit_price: 0\n        }]\n      });\n    }\n  }, [show, editingOrder]);\n  useEffect(() => {\n    if (editingOrder) {\n      // Load existing order data\n      loadOrderForEdit(editingOrder);\n    }\n  }, [editingOrder]);\n  const loadOrderForEdit = async orderId => {\n    try {\n      const [order, orderItems] = await Promise.all([api.getOrder(orderId), api.getOrderItemsByOrder(orderId)]);\n      setOrderForm({\n        customer_id: order.customer_id.toString(),\n        order_date: order.order_date,\n        items: orderItems.length > 0 ? orderItems.map(item => ({\n          product_id: item.product_id.toString(),\n          quantity: item.quantity,\n          unit_price: item.unit_price\n        })) : [{\n          product_id: '',\n          quantity: 1,\n          unit_price: 0\n        }]\n      });\n    } catch (error) {\n      console.error('Failed to load order for editing:', error);\n      showToast('Failed to load order details', 'error');\n    }\n  };\n  const addItemRow = () => {\n    setOrderForm(prev => ({\n      ...prev,\n      items: [...prev.items, {\n        product_id: '',\n        quantity: 1,\n        unit_price: 0\n      }]\n    }));\n  };\n  const removeItemRow = index => {\n    if (orderForm.items.length > 1) {\n      setOrderForm(prev => ({\n        ...prev,\n        items: prev.items.filter((_, i) => i !== index)\n      }));\n    }\n  };\n  const updateItem = (index, field, value) => {\n    setOrderForm(prev => {\n      const newItems = [...prev.items];\n      newItems[index] = {\n        ...newItems[index],\n        [field]: value\n      };\n\n      // Auto-update price when product is selected\n      if (field === 'product_id' && value) {\n        const product = PRODUCTS[value];\n        if (product) {\n          newItems[index].unit_price = product.price;\n        }\n      }\n      return {\n        ...prev,\n        items: newItems\n      };\n    });\n  };\n  const updateOrderField = (field, value) => {\n    setOrderForm(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const calculateTotal = () => {\n    return orderForm.items.reduce((sum, item) => {\n      return sum + parseFloat(item.quantity || 0) * parseFloat(item.unit_price || 0);\n    }, 0);\n  };\n  const handleSave = async () => {\n    // Validation\n    if (!orderForm.customer_id || !orderForm.order_date) {\n      showToast('Please fill in all order details', 'error');\n      return;\n    }\n    for (const item of orderForm.items) {\n      if (!item.product_id || !item.quantity || !item.unit_price) {\n        showToast('Please fill in all item details', 'error');\n        return;\n      }\n      if (item.quantity <= 0 || item.unit_price <= 0) {\n        showToast('Quantity and price must be positive numbers', 'error');\n        return;\n      }\n    }\n    const orderData = {\n      customer_id: orderForm.customer_id,\n      order_date: orderForm.order_date\n    };\n    await onSave(orderData, orderForm.items, editingOrder);\n  };\n  if (!show) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    onClick: e => e.target.className === 'modal' && onClose(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editingOrder ? `Edit Order #${editingOrder}` : 'Create New Order'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-details-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Order Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Customer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: orderForm.customer_id,\n                onChange: e => updateOrderField('customer_id', e.target.value),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), Object.entries(CUSTOMERS).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: id,\n                  children: name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Order Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: orderForm.order_date,\n                onChange: e => updateOrderField('order_date', e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-sm btn-primary\",\n              onClick: addItemRow,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), \" Add Item\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), orderForm.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Product:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: item.product_id,\n                onChange: e => updateItem(index, 'product_id', e.target.value),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this), Object.entries(PRODUCTS).map(([id, product]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: id,\n                  children: [product.name, \" - \", formatCurrency(product.price)]\n                }, id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Quantity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                value: item.quantity,\n                onChange: e => updateItem(index, 'quantity', e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Unit Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                min: \"0\",\n                value: item.unit_price,\n                onChange: e => updateItem(index, 'unit_price', e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-total\",\n                children: formatCurrency((item.quantity || 0) * (item.unit_price || 0))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"remove-item-btn\",\n              onClick: () => removeItemRow(index),\n              style: {\n                visibility: orderForm.items.length === 1 ? 'hidden' : 'visible'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-summary\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Total: \", formatCurrency(calculateTotal())]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-success\",\n            onClick: handleSave,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-shopping-cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), ' ', editingOrder ? 'Update' : 'Create', \" Order\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(AddOrderForm, \"xW+MwDLpuW1UcBXd+Wwjaj4scQE=\");\n_c = AddOrderForm;\nexport default AddOrderForm;\nvar _c;\n$RefreshReg$(_c, \"AddOrderForm\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","CUSTOMERS","PRODUCTS","name","price","getTodayDate","Date","toISOString","split","AddOrderForm","show","editingOrder","onClose","onSave","showToast","formatCurrency","_s","orderForm","setOrderForm","customer_id","order_date","items","product_id","quantity","unit_price","loadOrderForEdit","orderId","order","orderItems","Promise","all","getOrder","getOrderItemsByOrder","toString","length","map","item","error","console","addItemRow","prev","removeItemRow","index","filter","_","i","updateItem","field","value","newItems","product","updateOrderField","calculateTotal","reduce","sum","parseFloat","handleSave","orderData","className","onClick","e","target","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","required","Object","entries","id","type","min","step","style","visibility","_c","$RefreshReg$"],"sources":["/Users/iara/Projects/JavascriptFrontEnds-Trio/src/react/src/components/AddOrderForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { api } from '../utils/api';\n\n// Reference Data\nconst CUSTOMERS = {\n  1: 'Alice Johnson',\n  2: 'Bob Smith',\n  3: 'Carol Davis',\n};\n\nconst PRODUCTS = {\n  1: { name: 'Laptop Computer', price: 899.99 },\n  2: { name: 'Wireless Mouse', price: 29.99 },\n  3: { name: 'USB Keyboard', price: 49.99 },\n};\n\nconst getTodayDate = () => {\n  return new Date().toISOString().split('T')[0];\n};\n\nconst AddOrderForm = ({\n  show,\n  editingOrder,\n  onClose,\n  onSave,\n  showToast,\n  formatCurrency,\n}) => {\n  const [orderForm, setOrderForm] = useState({\n    customer_id: '',\n    order_date: getTodayDate(),\n    items: [{ product_id: '', quantity: 1, unit_price: 0 }],\n  });\n\n  useEffect(() => {\n    if (show && !editingOrder) {\n      // Reset form for new order\n      setOrderForm({\n        customer_id: '',\n        order_date: getTodayDate(),\n        items: [{ product_id: '', quantity: 1, unit_price: 0 }],\n      });\n    }\n  }, [show, editingOrder]);\n\n  useEffect(() => {\n    if (editingOrder) {\n      // Load existing order data\n      loadOrderForEdit(editingOrder);\n    }\n  }, [editingOrder]);\n\n  const loadOrderForEdit = async (orderId) => {\n    try {\n      const [order, orderItems] = await Promise.all([\n        api.getOrder(orderId),\n        api.getOrderItemsByOrder(orderId),\n      ]);\n\n      setOrderForm({\n        customer_id: order.customer_id.toString(),\n        order_date: order.order_date,\n        items:\n          orderItems.length > 0\n            ? orderItems.map((item) => ({\n                product_id: item.product_id.toString(),\n                quantity: item.quantity,\n                unit_price: item.unit_price,\n              }))\n            : [{ product_id: '', quantity: 1, unit_price: 0 }],\n      });\n    } catch (error) {\n      console.error('Failed to load order for editing:', error);\n      showToast('Failed to load order details', 'error');\n    }\n  };\n\n  const addItemRow = () => {\n    setOrderForm((prev) => ({\n      ...prev,\n      items: [...prev.items, { product_id: '', quantity: 1, unit_price: 0 }],\n    }));\n  };\n\n  const removeItemRow = (index) => {\n    if (orderForm.items.length > 1) {\n      setOrderForm((prev) => ({\n        ...prev,\n        items: prev.items.filter((_, i) => i !== index),\n      }));\n    }\n  };\n\n  const updateItem = (index, field, value) => {\n    setOrderForm((prev) => {\n      const newItems = [...prev.items];\n      newItems[index] = { ...newItems[index], [field]: value };\n\n      // Auto-update price when product is selected\n      if (field === 'product_id' && value) {\n        const product = PRODUCTS[value];\n        if (product) {\n          newItems[index].unit_price = product.price;\n        }\n      }\n\n      return { ...prev, items: newItems };\n    });\n  };\n\n  const updateOrderField = (field, value) => {\n    setOrderForm((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const calculateTotal = () => {\n    return orderForm.items.reduce((sum, item) => {\n      return (\n        sum + parseFloat(item.quantity || 0) * parseFloat(item.unit_price || 0)\n      );\n    }, 0);\n  };\n\n  const handleSave = async () => {\n    // Validation\n    if (!orderForm.customer_id || !orderForm.order_date) {\n      showToast('Please fill in all order details', 'error');\n      return;\n    }\n\n    for (const item of orderForm.items) {\n      if (!item.product_id || !item.quantity || !item.unit_price) {\n        showToast('Please fill in all item details', 'error');\n        return;\n      }\n\n      if (item.quantity <= 0 || item.unit_price <= 0) {\n        showToast('Quantity and price must be positive numbers', 'error');\n        return;\n      }\n    }\n\n    const orderData = {\n      customer_id: orderForm.customer_id,\n      order_date: orderForm.order_date,\n    };\n\n    await onSave(orderData, orderForm.items, editingOrder);\n  };\n\n  if (!show) return null;\n\n  return (\n    <div\n      className='modal'\n      onClick={(e) => e.target.className === 'modal' && onClose()}\n    >\n      <div className='modal-content'>\n        <div className='modal-header'>\n          <h3>\n            {editingOrder ? `Edit Order #${editingOrder}` : 'Create New Order'}\n          </h3>\n          <span className='close' onClick={onClose}>\n            &times;\n          </span>\n        </div>\n        <div className='modal-body'>\n          <div className='order-details-section'>\n            <h4>Order Details</h4>\n            <div className='form-row'>\n              <div className='form-group'>\n                <label>Customer:</label>\n                <select\n                  value={orderForm.customer_id}\n                  onChange={(e) =>\n                    updateOrderField('customer_id', e.target.value)\n                  }\n                  required\n                >\n                  <option value=''>Select Customer</option>\n                  {Object.entries(CUSTOMERS).map(([id, name]) => (\n                    <option key={id} value={id}>\n                      {name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className='form-group'>\n                <label>Order Date:</label>\n                <input\n                  type='date'\n                  value={orderForm.order_date}\n                  onChange={(e) =>\n                    updateOrderField('order_date', e.target.value)\n                  }\n                  required\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className='items-section'>\n            <div className='section-header'>\n              <h4>Order Items</h4>\n              <button\n                type='button'\n                className='btn btn-sm btn-primary'\n                onClick={addItemRow}\n              >\n                <i className='fas fa-plus'></i> Add Item\n              </button>\n            </div>\n\n            {orderForm.items.map((item, index) => (\n              <div key={index} className='item-row'>\n                <div className='form-group'>\n                  <label>Product:</label>\n                  <select\n                    value={item.product_id}\n                    onChange={(e) =>\n                      updateItem(index, 'product_id', e.target.value)\n                    }\n                    required\n                  >\n                    <option value=''>Select Product</option>\n                    {Object.entries(PRODUCTS).map(([id, product]) => (\n                      <option key={id} value={id}>\n                        {product.name} - {formatCurrency(product.price)}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className='form-group'>\n                  <label>Quantity:</label>\n                  <input\n                    type='number'\n                    min='1'\n                    value={item.quantity}\n                    onChange={(e) =>\n                      updateItem(index, 'quantity', e.target.value)\n                    }\n                    required\n                  />\n                </div>\n                <div className='form-group'>\n                  <label>Unit Price:</label>\n                  <input\n                    type='number'\n                    step='0.01'\n                    min='0'\n                    value={item.unit_price}\n                    onChange={(e) =>\n                      updateItem(index, 'unit_price', e.target.value)\n                    }\n                    required\n                  />\n                </div>\n                <div className='form-group'>\n                  <label>Total:</label>\n                  <div className='item-total'>\n                    {formatCurrency(\n                      (item.quantity || 0) * (item.unit_price || 0)\n                    )}\n                  </div>\n                </div>\n                <button\n                  type='button'\n                  className='remove-item-btn'\n                  onClick={() => removeItemRow(index)}\n                  style={{\n                    visibility:\n                      orderForm.items.length === 1 ? 'hidden' : 'visible',\n                  }}\n                >\n                  <i className='fas fa-times'></i>\n                </button>\n              </div>\n            ))}\n\n            <div className='order-summary'>\n              <strong>Total: {formatCurrency(calculateTotal())}</strong>\n            </div>\n          </div>\n\n          <div className='form-buttons'>\n            <button\n              type='button'\n              className='btn btn-secondary'\n              onClick={onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type='button'\n              className='btn btn-success'\n              onClick={handleSave}\n            >\n              <i className='fas fa-shopping-cart'></i>{' '}\n              {editingOrder ? 'Update' : 'Create'} Order\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}