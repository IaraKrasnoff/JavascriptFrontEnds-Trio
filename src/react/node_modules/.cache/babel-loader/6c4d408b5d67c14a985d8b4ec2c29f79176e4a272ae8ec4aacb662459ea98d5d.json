{"ast":null,"code":"// API Communication Module for React Orders Management\nconst API_BASE_URL = 'http://localhost:8000';\nconst apiCall = async (endpoint, options = {}) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    });\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({\n        detail: response.statusText\n      }));\n      throw new Error(errorData.detail || `HTTP ${response.status}: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API Error:', error);\n    throw error;\n  }\n};\n\n// Orders API functions\nconst getOrders = async () => {\n  return await apiCall('/orders');\n};\nconst getOrder = async id => {\n  return await apiCall(`/orders/${id}`);\n};\nconst createOrder = async orderData => {\n  return await apiCall('/orders', {\n    method: 'POST',\n    body: JSON.stringify(orderData)\n  });\n};\nconst updateOrder = async (id, orderData) => {\n  return await apiCall(`/orders/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(orderData)\n  });\n};\nconst deleteOrder = async id => {\n  return await apiCall(`/orders/${id}`, {\n    method: 'DELETE'\n  });\n};\n\n// Order Items API functions\nconst getOrderItems = async () => {\n  return await apiCall('/order-items');\n};\nconst getOrderItemsByOrder = async orderId => {\n  return await apiCall(`/orders/${orderId}/items`);\n};\nconst createOrderItem = async (orderId, itemData) => {\n  return await apiCall(`/orders/${orderId}/items`, {\n    method: 'POST',\n    body: JSON.stringify(itemData)\n  });\n};\nconst updateOrderItem = async (itemId, itemData) => {\n  return await apiCall(`/order-items/${itemId}`, {\n    method: 'PUT',\n    body: JSON.stringify(itemData)\n  });\n};\nconst deleteOrderItem = async itemId => {\n  return await apiCall(`/order-items/${itemId}`, {\n    method: 'DELETE'\n  });\n};\n\n// Advanced API functions\nconst createOrderWithItems = async (orderData, items) => {\n  const orderWithItemsData = {\n    customer_id: parseInt(orderData.customer_id),\n    order_date: orderData.order_date,\n    items: items.map(item => ({\n      product_id: parseInt(item.product_id),\n      quantity: parseInt(item.quantity),\n      unit_price: parseFloat(item.unit_price)\n    }))\n  };\n  return await apiCall('/orders/with-items', {\n    method: 'POST',\n    body: JSON.stringify(orderWithItemsData)\n  });\n};\nconst updateOrderWithItems = async (orderId, orderData, items) => {\n  const orderWithItemsData = {\n    customer_id: parseInt(orderData.customer_id),\n    order_date: orderData.order_date,\n    items: items.map(item => ({\n      product_id: parseInt(item.product_id),\n      quantity: parseInt(item.quantity),\n      unit_price: parseFloat(item.unit_price)\n    }))\n  };\n  return await apiCall(`/orders/${orderId}/with-items`, {\n    method: 'PUT',\n    body: JSON.stringify(orderWithItemsData)\n  });\n};\n\n// Test API connection\nconst testConnection = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/`);\n    return response.ok;\n  } catch (error) {\n    console.error('API connection failed:', error);\n    return false;\n  }\n};\n\n// Exported API object\nexport const api = {\n  API_BASE_URL,\n  getOrders,\n  getOrder,\n  createOrder,\n  updateOrder,\n  deleteOrder,\n  getOrderItems,\n  getOrderItemsByOrder,\n  createOrderItem,\n  updateOrderItem,\n  deleteOrderItem,\n  createOrderWithItems,\n  updateOrderWithItems,\n  testConnection\n};\n\n// Default export for convenience\nexport default api;","map":{"version":3,"names":["API_BASE_URL","apiCall","endpoint","options","response","fetch","headers","ok","errorData","json","catch","detail","statusText","Error","status","error","console","getOrders","getOrder","id","createOrder","orderData","method","body","JSON","stringify","updateOrder","deleteOrder","getOrderItems","getOrderItemsByOrder","orderId","createOrderItem","itemData","updateOrderItem","itemId","deleteOrderItem","createOrderWithItems","items","orderWithItemsData","customer_id","parseInt","order_date","map","item","product_id","quantity","unit_price","parseFloat","updateOrderWithItems","testConnection","api"],"sources":["/Users/iara/Projects/JavascriptFrontEnds-Trio/src/react/src/utils/api.js"],"sourcesContent":["// API Communication Module for React Orders Management\nconst API_BASE_URL = 'http://localhost:8000';\n\nconst apiCall = async (endpoint, options = {}) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    });\n\n    if (!response.ok) {\n      const errorData = await response\n        .json()\n        .catch(() => ({ detail: response.statusText }));\n      throw new Error(\n        errorData.detail || `HTTP ${response.status}: ${response.statusText}`\n      );\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('API Error:', error);\n    throw error;\n  }\n};\n\n// Orders API functions\nconst getOrders = async () => {\n  return await apiCall('/orders');\n};\n\nconst getOrder = async (id) => {\n  return await apiCall(`/orders/${id}`);\n};\n\nconst createOrder = async (orderData) => {\n  return await apiCall('/orders', {\n    method: 'POST',\n    body: JSON.stringify(orderData),\n  });\n};\n\nconst updateOrder = async (id, orderData) => {\n  return await apiCall(`/orders/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(orderData),\n  });\n};\n\nconst deleteOrder = async (id) => {\n  return await apiCall(`/orders/${id}`, {\n    method: 'DELETE',\n  });\n};\n\n// Order Items API functions\nconst getOrderItems = async () => {\n  return await apiCall('/order-items');\n};\n\nconst getOrderItemsByOrder = async (orderId) => {\n  return await apiCall(`/orders/${orderId}/items`);\n};\n\nconst createOrderItem = async (orderId, itemData) => {\n  return await apiCall(`/orders/${orderId}/items`, {\n    method: 'POST',\n    body: JSON.stringify(itemData),\n  });\n};\n\nconst updateOrderItem = async (itemId, itemData) => {\n  return await apiCall(`/order-items/${itemId}`, {\n    method: 'PUT',\n    body: JSON.stringify(itemData),\n  });\n};\n\nconst deleteOrderItem = async (itemId) => {\n  return await apiCall(`/order-items/${itemId}`, {\n    method: 'DELETE',\n  });\n};\n\n// Advanced API functions\nconst createOrderWithItems = async (orderData, items) => {\n  const orderWithItemsData = {\n    customer_id: parseInt(orderData.customer_id),\n    order_date: orderData.order_date,\n    items: items.map((item) => ({\n      product_id: parseInt(item.product_id),\n      quantity: parseInt(item.quantity),\n      unit_price: parseFloat(item.unit_price),\n    })),\n  };\n\n  return await apiCall('/orders/with-items', {\n    method: 'POST',\n    body: JSON.stringify(orderWithItemsData),\n  });\n};\n\nconst updateOrderWithItems = async (orderId, orderData, items) => {\n  const orderWithItemsData = {\n    customer_id: parseInt(orderData.customer_id),\n    order_date: orderData.order_date,\n    items: items.map((item) => ({\n      product_id: parseInt(item.product_id),\n      quantity: parseInt(item.quantity),\n      unit_price: parseFloat(item.unit_price),\n    })),\n  };\n\n  return await apiCall(`/orders/${orderId}/with-items`, {\n    method: 'PUT',\n    body: JSON.stringify(orderWithItemsData),\n  });\n};\n\n// Test API connection\nconst testConnection = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/`);\n    return response.ok;\n  } catch (error) {\n    console.error('API connection failed:', error);\n    return false;\n  }\n};\n\n// Exported API object\nexport const api = {\n  API_BASE_URL,\n  getOrders,\n  getOrder,\n  createOrder,\n  updateOrder,\n  deleteOrder,\n  getOrderItems,\n  getOrderItemsByOrder,\n  createOrderItem,\n  updateOrderItem,\n  deleteOrderItem,\n  createOrderWithItems,\n  updateOrderWithItems,\n  testConnection,\n};\n\n// Default export for convenience\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}